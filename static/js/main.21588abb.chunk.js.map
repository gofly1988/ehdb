{"version":3,"sources":["serviceWorker.ts","components/Category/index.tsx","components/Tag/index.tsx","components/Timestamp/index.tsx","components/Space/index.tsx","components/Gallery/index.tsx","components/Gallery/ExtendedListitem.tsx","components/Search/index.tsx","components/Home/index.tsx","index.tsx","AppRouter.tsx"],"names":["Boolean","window","location","hostname","match","CategoryMode","Category","prop","object","value","mode","type","catConfig","Object","keys","find","key","Large","Normal","Compat","react_default","a","createElement","onClick","data-disabled","enable","undefined","className","concat","Tag","props","tags","tobj","filter","it","includes","forEach","tag","split","some","push","map","Timestamp","time","date","Date","parseInt","getFullYear","formatNumber","getMonth","getDate","getHours","getMinutes","num","slice","Space","style","margin","DisplayMode","ExtendedListitem","_useState","useState","_useState2","slicedToArray","hideDialog","setHideDialog","gallery","Dialog","hidden","onDismiss","dialogContentProps","DialogType","normal","title","subText","JSON","stringify","DialogFooter","PrimaryButton","text","ActionButton","marginRight","position","float","menuProps","items","ariaLabel","dir","padding","src","thumb","textAlign","Category_Category","category","posted","Rating","min","max","readOnly","rating","uploader","filecount","display","Text","variant","title_jpn","Tag_Tag","ROWS_PER_PAGE","MAX_ROW_HEIGHT","Gallery","columnCount","columnWidth","rowHeight","listProps","displayMode","Grid","getItemCountForPage","itemIndex","surfaceRect","Math","ceil","width","floor","getPageHeight","index","Search","doujinshiEnabled","setDoujinshiEnabled","_useState3","_useState4","mangaEnabled","setMangaEnabled","_useState5","_useState6","artistCGEnabled","setArtistCGEnabled","_useState7","_useState8","gameCGEnabled","setGameCGEnabled","_useState9","_useState10","westernEnabled","setWesternEnabled","_useState11","_useState12","nonhEnabled","setNonhEnabled","_useState13","_useState14","imageSetEnabled","setImageSetEnabled","_useState15","_useState16","cosplayEnabled","setCosplayEnabled","_useState17","_useState18","asianPornEnabled","setAsianPornEnabled","_useState19","_useState20","miscEnabled","setMiscEnabled","buildCats","cats","useEffect","length","SearchBox","query","onChange","onSearch","search","cat","placeholder","Home","galleryList","setGalleryList","isLoading","setIsLoading","setQuery","enabledCat","setEnabledCat","hasPrev","setHasPrev","currentPage","setCurrentPage","fetchData","_ref","asyncToGenerator","regenerator_default","mark","_callee","params","response","wrap","_context","prev","next","queryString","parse","axios","get","serverConfig","baseurl","sent","data","stop","_x","apply","this","arguments","toNext","toPage","toPrev","page","assign","history","Search_Search","target","doSearch","DefaultButton","TextField","toString","ProgressIndicator","ExtendedList","initializeIcons","ReactDOM","render","Fabric","react","react_router_dom","react_router","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.21588abb.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { MouseEventHandler } from 'react';\r\nimport \"./index.css\";\r\nimport catConfig from '../../config/cat.json';\r\n\r\nexport enum CategoryMode {\r\n    Normal,\r\n    Compat,\r\n    Large\r\n}\r\n\r\nfunction getKeyByValue(object: any, value: any) {\r\n    return Object.keys(object).find(key => object[key] === value);\r\n}\r\n\r\nexport default function Category(prop: { type: string, mode: CategoryMode, enable?: boolean, onClick?: MouseEventHandler<HTMLDivElement> }) {\r\n    let mode = \"cn\";\r\n    let type = getKeyByValue(catConfig, prop.type);\r\n    switch (prop.mode) {\r\n        case CategoryMode.Large:\r\n            mode = \"cw\"\r\n            break;\r\n        case CategoryMode.Normal:\r\n            mode = \"cn\"\r\n            break;\r\n        case CategoryMode.Compat:\r\n            mode = \"cs\"\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return (\r\n        <div onClick={prop.onClick} data-disabled={prop.enable === false || undefined} className={`${mode} ${type}`}>\r\n            {prop.type}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport \"./index.css\"\r\n\r\nexport default function Tag(props: { tags: string[] }) {\r\n    const tags = props.tags;\r\n    const tobj: any = {};\r\n    tags.filter(it => it.includes(':')).forEach(it => {\r\n        const tag = it.split(':');\r\n        if (!Object.keys(tobj).some(it => it === tag[0])) {\r\n            tobj[tag[0]] = [];\r\n        }\r\n        tobj[tag[0]].push(tag[1]);\r\n    })\r\n    return (\r\n        <table>\r\n            <tbody>\r\n                {Object.keys(tobj).map(it => (\r\n                    <tr>\r\n                        <td className=\"tc\">\r\n                            {it}:\r\n                    </td>\r\n                    <td>\r\n                            {tobj[it].map((value: string) => (\r\n                                <div className=\"gt\">\r\n                                    {value}\r\n                                </div>\r\n                            ))}\r\n                        </td>\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function Timestamp(props: { time: string }) {\r\n    const { time } = props;\r\n    const date = new Date(parseInt(time) * 1000);\r\n    return (\r\n        <span>\r\n            {date.getFullYear()}-{formatNumber(date.getMonth() + 1)}-{formatNumber(date.getDate())} {formatNumber(date.getHours())}:{formatNumber(date.getMinutes())}\r\n        </span>\r\n    )\r\n}\r\n\r\nfunction formatNumber(num: number): string {\r\n    return (\"0\" + num).slice(-2);\r\n}","import React from 'react';\r\n\r\nexport default function Space() {\r\n    return (\r\n        <div style={{margin: '0.6em'}}></div>\r\n    )\r\n}","import React from 'react';\r\nimport { IRectangle } from '@uifabric/utilities';\r\nimport { GalleryModel } from '../../model/gallery';\r\nimport ExtendedListitem from './ExtendedListitem';\r\n\r\nexport enum DisplayMode {\r\n    Grid,\r\n    List,\r\n    ExtendedList\r\n}\r\n\r\nexport interface IGalleryProps {\r\n    items: GalleryModel[];\r\n    displayMode: DisplayMode\r\n}\r\n\r\nconst ROWS_PER_PAGE = 3;\r\nconst MAX_ROW_HEIGHT = 250;\r\n\r\nexport default function Gallery(props: IGalleryProps) {\r\n    let columnCount = 0;\r\n    let columnWidth = 0;\r\n    let rowHeight = 0;\r\n    let listProps: any = {};\r\n    if (props.displayMode === DisplayMode.Grid) {\r\n        listProps.getItemCountForPage = (itemIndex?: number, surfaceRect?: IRectangle): number => {\r\n            if (itemIndex === 0) {\r\n                columnCount = Math.ceil(surfaceRect!.width / MAX_ROW_HEIGHT);\r\n                columnWidth = Math.floor(surfaceRect!.width / columnCount);\r\n                rowHeight = columnWidth;\r\n            }\r\n            return columnCount * ROWS_PER_PAGE;\r\n        }\r\n        listProps.getPageHeight = (): number => {\r\n            return rowHeight * ROWS_PER_PAGE;\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            {props.items.map((it, index) => (\r\n                <ExtendedListitem key={index} gallery={it}/>\r\n            ))}\r\n        </div>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { IItemProp } from './IItemProp';\r\nimport Category, { CategoryMode } from '../Category';\r\nimport Tag from '../Tag';\r\nimport { Text } from 'office-ui-fabric-react/lib/Text';\r\nimport Timestamp from '../Timestamp';\r\nimport Space from '../Space';\r\nimport { Rating } from 'office-ui-fabric-react/lib/Rating';\r\nimport { ActionButton, Dialog, DialogFooter, PrimaryButton, DialogType } from 'office-ui-fabric-react';\r\n\r\nexport default function ExtendedListitem(prop: IItemProp) {\r\n    const [hideDialog, setHideDialog] = useState(true);\r\n    const { gallery } = prop;\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                hidden={hideDialog}\r\n                onDismiss={() => setHideDialog(true)}\r\n                dialogContentProps={{\r\n                    type: DialogType.normal,\r\n                    title: 'Raw Detail',\r\n                    subText: JSON.stringify(gallery)\r\n                }}\r\n            >\r\n                <DialogFooter>\r\n                    <PrimaryButton onClick={() => setHideDialog(true)} text=\"OK\" />\r\n                </DialogFooter>\r\n            </Dialog>\r\n            <ActionButton\r\n                style={{\r\n                    marginRight: '1.2em',\r\n                    position: 'relative',\r\n                    float: 'right'\r\n                }}\r\n                menuProps={{\r\n                    items: [\r\n                        {\r\n                            key: 'raw',\r\n                            text: 'Raw detail',\r\n                            onClick: () => setHideDialog(false)\r\n                        }\r\n                    ]\r\n                }}\r\n                title=\"More\"\r\n                ariaLabel=\"More\" />\r\n            <div className=\"ms-Grid ms-depth-4\" dir=\"ltr\" style={{ margin: '1.2em', padding: '1.1em' }}>\r\n                <div className=\"ms-Grid-row\">\r\n                    <div className=\"ms-Grid-col ms-sm12 ms-md6 ms-lg4 ms-xl3 ms-xxl2 ms-xxxl2\">\r\n                        <img src={gallery.thumb} />\r\n                    </div>\r\n                    <div className=\"ms-Grid-col ms-hiddenLgDown ms-sm12 ms-md12 ms-lg3 ms-xl2 ms-xxl2 ms-xxxl1\" style={{textAlign: 'center'}}>\r\n                        <div>\r\n                            <Category mode={CategoryMode.Normal} type={gallery.category} />\r\n                        </div>\r\n                        <Space />\r\n                        <div>\r\n                            <Timestamp time={gallery.posted} />\r\n                        </div>\r\n                        <Space />\r\n                        <Rating\r\n                            min={1}\r\n                            max={5}\r\n                            readOnly={true}\r\n                            rating={parseInt(gallery.rating)} />\r\n                        <Space />\r\n                        <div>\r\n                            {gallery.uploader}\r\n                        </div>\r\n                        <Space />\r\n                        <div>\r\n                            {gallery.filecount} pages\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"ms-Grid-col ms-sm12 ms-md6 ms-lg8 ms-xl7 ms-xxl8 ms-xxxl9\" style={{ textAlign: 'left', display: 'contents' }}>\r\n                        <div>\r\n                            <div>\r\n                                <Text variant=\"large\">\r\n                                    {gallery.title}\r\n                                </Text>\r\n                            </div>\r\n                            <Space />\r\n                            <div>\r\n                                <Text variant=\"mediumPlus\">\r\n                                    {gallery.title_jpn}\r\n                                </Text>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"ms-hiddenXlUp\">\r\n                            <Space />\r\n                            <div>\r\n                                <Category mode={CategoryMode.Normal} type={gallery.category} />\r\n                            </div>\r\n                            <Space />\r\n                            <div>\r\n                                <Timestamp time={gallery.posted} />\r\n                            </div>\r\n                            <Space />\r\n                            <Rating\r\n                                min={1}\r\n                                max={5}\r\n                                readOnly={true}\r\n                                rating={parseInt(gallery.rating)} />\r\n                            <Space />\r\n                            <div>\r\n                                {gallery.uploader}\r\n                            </div>\r\n                            <Space />\r\n                            <div>\r\n                                {gallery.filecount} pages\r\n                        </div>\r\n                        </div>\r\n                        <Space />\r\n                        <div>\r\n                            <Tag tags={gallery.tags} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { SearchBox } from 'office-ui-fabric-react';\r\nimport Category, { CategoryMode } from '../Category';\r\nimport \"./index.css\";\r\nimport catConfig from '../../config/cat.json';\r\n\r\nexport interface SearchParameter {\r\n    cat: string[];\r\n    search: string;\r\n}\r\n\r\nexport interface ISearchProps {\r\n    cats?: string[];\r\n    onSearch?: (parameter: SearchParameter) => void;\r\n    query?: string;\r\n    onChange?: (event?: React.ChangeEvent<HTMLInputElement>, newValue?: string) => void;\r\n}\r\n\r\nexport default function Search(props: ISearchProps) {\r\n\r\n    const [doujinshiEnabled, setDoujinshiEnabled] = useState(true);\r\n    const [mangaEnabled, setMangaEnabled] = useState(true);\r\n    const [artistCGEnabled, setArtistCGEnabled] = useState(true);\r\n    const [gameCGEnabled, setGameCGEnabled] = useState(true);\r\n    const [westernEnabled, setWesternEnabled] = useState(true);\r\n    const [nonhEnabled, setNonhEnabled] = useState(true);\r\n    const [imageSetEnabled, setImageSetEnabled] = useState(true);\r\n    const [cosplayEnabled, setCosplayEnabled] = useState(true);\r\n    const [asianPornEnabled, setAsianPornEnabled] = useState(true);\r\n    const [miscEnabled, setMiscEnabled] = useState(true);\r\n\r\n    function search(value: string): void {\r\n        if (props.onSearch) {\r\n            props.onSearch({\r\n                search: value,\r\n                cat: buildCats()\r\n            })\r\n        }\r\n    }\r\n\r\n    function buildCats(): string[] {\r\n        const cats: string[] = [];\r\n        if (doujinshiEnabled &&\r\n            mangaEnabled &&\r\n            artistCGEnabled &&\r\n            gameCGEnabled &&\r\n            westernEnabled &&\r\n            nonhEnabled &&\r\n            imageSetEnabled &&\r\n            cosplayEnabled &&\r\n            asianPornEnabled &&\r\n            miscEnabled) {\r\n            return cats;\r\n        }\r\n        if (doujinshiEnabled) {\r\n            cats.push('ct2')\r\n        }\r\n        if (mangaEnabled) {\r\n            cats.push('ct3')\r\n        }\r\n        if (artistCGEnabled) {\r\n            cats.push('ct4')\r\n        }\r\n        if (gameCGEnabled) {\r\n            cats.push('ct5')\r\n        }\r\n        if (westernEnabled) {\r\n            cats.push('cta')\r\n        }\r\n        if (nonhEnabled) {\r\n            cats.push('ct9')\r\n        }\r\n        if (imageSetEnabled) {\r\n            cats.push('ct6')\r\n        }\r\n        if (cosplayEnabled) {\r\n            cats.push('ct7')\r\n        }\r\n        if (asianPornEnabled) {\r\n            cats.push('ct8')\r\n        }\r\n        if (miscEnabled) {\r\n            cats.push('ct1')\r\n        }\r\n\r\n        return cats;\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (props.cats && props.cats.length > 0) {\r\n            setMiscEnabled(props.cats.includes(\"ct1\")) \r\n            setDoujinshiEnabled(props.cats.includes(\"ct2\")) \r\n            setMangaEnabled(props.cats.includes(\"ct3\")) \r\n            setArtistCGEnabled(props.cats.includes(\"ct4\")) \r\n            setGameCGEnabled(props.cats.includes(\"ct5\")) \r\n            setImageSetEnabled(props.cats.includes(\"ct6\")) \r\n            setCosplayEnabled(props.cats.includes(\"ct7\")) \r\n            setAsianPornEnabled(props.cats.includes(\"ct8\")) \r\n            setNonhEnabled(props.cats.includes(\"ct9\")) \r\n            setWesternEnabled(props.cats.includes(\"cta\")) \r\n        }\r\n    }, [props]);\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"search-category-list\">\r\n                <div className=\"ms-Grid\" dir=\"ltr\">\r\n                    <div className=\"ms-Grid-row\">\r\n                        <Category mode={CategoryMode.Compat} onClick={() => setDoujinshiEnabled(!doujinshiEnabled)} enable={doujinshiEnabled} type={'Doujinshi'} />\r\n                        <Category mode={CategoryMode.Compat} onClick={() => setMangaEnabled(!mangaEnabled)} enable={mangaEnabled} type={'Manga'} />\r\n                        <Category mode={CategoryMode.Compat} onClick={() => setArtistCGEnabled(!artistCGEnabled)} enable={artistCGEnabled} type={'Artist CG'} />\r\n                        <Category mode={CategoryMode.Compat} onClick={() => setGameCGEnabled(!gameCGEnabled)} enable={gameCGEnabled} type={'Game CG'} />\r\n                        <Category mode={CategoryMode.Compat} onClick={() => setWesternEnabled(!westernEnabled)} enable={westernEnabled} type={'Western'} />\r\n                    </div>\r\n                    <div className=\"ms-Grid-row\">\r\n                        <Category mode={CategoryMode.Compat} onClick={() => setNonhEnabled(!nonhEnabled)} enable={nonhEnabled} type={'Non-H'} />\r\n                        <Category mode={CategoryMode.Compat} onClick={() => setImageSetEnabled(!imageSetEnabled)} enable={imageSetEnabled} type={'Image Set'} />\r\n                        <Category mode={CategoryMode.Compat} onClick={() => setCosplayEnabled(!cosplayEnabled)} enable={cosplayEnabled} type={'Cosplay'} />\r\n                        <Category mode={CategoryMode.Compat} onClick={() => setAsianPornEnabled(!asianPornEnabled)} enable={asianPornEnabled} type={'Asian Porn'} />\r\n                        <Category mode={CategoryMode.Compat} onClick={() => setMiscEnabled(!miscEnabled)} enable={miscEnabled} type={'Misc'} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <SearchBox\r\n                value={props.query}\r\n                onChange={props.onChange}\r\n                onSearch={(value: string) => search(value)}\r\n                placeholder=\"For we shall win through. No matter the cost.\" />\r\n        </div>\r\n    );\r\n\r\n}","import React, { useState, useEffect } from 'react';\r\nimport './index.css';\r\nimport Gallery, { DisplayMode } from '../Gallery';\r\nimport Search, { SearchParameter } from '../Search';\r\nimport axios from 'axios';\r\nimport serverConfig from '../../config/server.json'\r\nimport { ProgressIndicator, DefaultButton, SpinButton, TextField } from 'office-ui-fabric-react';\r\nimport queryString from 'query-string';\r\n\r\n\r\nexport default function Home(props: any) {\r\n    const [galleryList, setGalleryList] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [query, setQuery] = useState('');\r\n    const [enabledCat, setEnabledCat] = useState([])\r\n    const [hasPrev, setHasPrev] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n    const fetchData = async (query?: any) => {\r\n        setIsLoading(true);\r\n        let params: any = {};\r\n        if (query) {\r\n            params = query;\r\n        } else {\r\n            params = queryString.parse(props.location.search);\r\n        }\r\n        if (params.search) {\r\n            setQuery(params.search as string)\r\n        }\r\n        setEnabledCat(params.cat)\r\n        const response = await axios.get(serverConfig.baseurl, {\r\n            params: params\r\n        });\r\n        setCurrentPage(parseInt(response.data.currentPage))\r\n        setHasPrev(response.data.currentPage > 0);\r\n        setGalleryList(response.data.items);\r\n        setIsLoading(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    function doSearch(search: SearchParameter) {\r\n        props.history.push({\r\n            search: `?${queryString.stringify(search)}`\r\n        });\r\n        fetchData(search);\r\n    }\r\n\r\n    function toNext() {\r\n        toPage(currentPage + 1)\r\n    }\r\n\r\n    function toPrev() {\r\n        if (hasPrev) {\r\n            toPage(currentPage - 1)\r\n        }\r\n    }\r\n\r\n    function toPage(page: number) {\r\n        const params = Object.assign(queryString.parse(props.location.search), {\r\n            page\r\n        })\r\n        props.history.push({\r\n            search: `?${queryString.stringify(params)}`\r\n        });\r\n        fetchData(params);\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <div className=\"search-content\">\r\n                <Search cats={enabledCat} onChange={(it: any) => setQuery(it.target.value)} query={query} onSearch={(search) => doSearch(search)} />\r\n            </div>\r\n            {!isLoading &&\r\n                <div className=\"paging-container\">\r\n                    {hasPrev && <DefaultButton text=\"<\" onClick={toPrev} />}\r\n                    <TextField type=\"number\" value={currentPage.toString()} onChange={(it: any) => setCurrentPage(parseInt(it.target.value))} className=\"paging-input\" />\r\n                    <DefaultButton text=\"GO!\" onClick={() => toPage(currentPage)} />\r\n                    <DefaultButton text=\">\" onClick={toNext} />\r\n                </div>\r\n            }\r\n            <div className=\"gallery-content\">\r\n                {isLoading && <ProgressIndicator />}\r\n                {!isLoading && <Gallery displayMode={DisplayMode.ExtendedList} items={galleryList} />}\r\n            </div>\r\n            {!isLoading &&\r\n                <div className=\"paging-container\">\r\n                    {hasPrev && <DefaultButton text=\"<\" onClick={toPrev} />}\r\n                    <TextField type=\"number\" value={currentPage.toString()} onChange={(it: any) => setCurrentPage(parseInt(it.target.value))} className=\"paging-input\" />\r\n                    <DefaultButton text=\"GO!\" onClick={() => toPage(currentPage)} />\r\n                    <DefaultButton text=\">\" onClick={toNext} />\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\nimport { initializeIcons } from 'office-ui-fabric-react/lib/Icons';\nimport * as serviceWorker from './serviceWorker';\nimport { AppRouter } from './AppRouter';\n\ninitializeIcons();\nReactDOM.render(\n    <Fabric>\n        <AppRouter/>\n    </Fabric>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import * as React from \"react\";\r\nimport { BrowserRouter, Redirect, Route } from \"react-router-dom\";\r\nimport Home from \"./components/Home\";\r\n\r\nexport const AppRouter: React.StatelessComponent<{}> = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <Route path=\"/\" component={Home} />\r\n        </BrowserRouter>\r\n    );\r\n};"],"sourceRoot":""}